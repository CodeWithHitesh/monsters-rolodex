{"version":3,"sources":["logo.svg","components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","class","alt","src","monster","id","width","height","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,wBCIFA,EAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBACIC,MAAM,aACNC,IAAI,UACJC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,aACHC,MAAM,MAAMC,OAAO,QAEvB,6BAAKR,EAAMK,QAAQI,OACnB,4BAAIT,EAAMK,QAAQK,YCTbC,EAAW,SAACX,GACrB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMY,SAASC,KAAI,SAAAR,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCYhBQ,G,MAVU,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIf,UAAU,SACVgB,KAAK,SAELF,YAAaA,EACbG,SAAUF,MCgDHG,E,kDAnDX,aAAe,IAAD,8BACV,gBAyBJH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAxBtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALP,E,qDAYd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAejD,WACI,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQI,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpD,OACI,sBAAKjC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIc,YAAY,kBACZC,aAAce,KAAKf,eAIvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7ClBI,aCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ec52a7ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.styles.css';\r\n\r\n// Individual monster.\r\nexport const Card = (props) => {\r\n    return <div className='card-container'>\r\n        <img\r\n            class=\"img-center\"\r\n            alt='monster'\r\n            src={`https://robohash.org/${props.monster.id}?set=set2`}\r\n            width=\"180\" height=\"180\"\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card-component'\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n};\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\n// If you don't need access to Lifecycle methods as well as state of component, then fuctional components are best to use for that purpose.\r\n// Functional components are easier to test as well as understand.\r\n// We never had state here, since we add state to that places where something changes.\r\n// If you had a state of searchfeild here, then we would not be able to pass information to CardList for it to change.\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        // Dyanmic placeholder\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport SearchBox from './components/search-box/search-box.component'\n\n\n// This file has extension of .js but actually the code is in .jsx\n// It still works fine because react gives the code to babel and webpack for conversion into suitable formats.\n// We changed into a class so that we could use state.\n\nclass App extends Component {\n    constructor() {\n        super();  // super helps to call the component's constructor.\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n\n        // Else, this keyword won't work unless you bind it.\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ monsters: users }));\n    }\n\n\n    // You require to bind this keyword with this definition.\n    // handleChange(e) {\n    //     this.setState({ searchField: e.target.value });\n    // }\n\n\n    // Arrow functions don't require to bind this keyword. React automatically binds it.\n    handleChange = e => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder='Search Monsters'\n                    handleChange={this.handleChange}\n                />\n                {/* Everytime you pass something in searchFeild, whole of page gets re-rendered. */}\n                {/* Passing prompts to CardList. */}\n                <CardList monsters={filteredMonsters} />\n            </div >\n        );\n    }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}